#version 330

layout(location = 0) in vec3 vertex_position;
layout(location = 1) in vec3 vertex_normal;
layout(location = 2) in vec3 tangent;
layout(location = 3) in vec2 uvs;

uniform mat4 uMVP;
uniform mat4 uWORLD;
uniform mat4 uWORLD_INVERSE;
uniform vec3 uCameraPosition;

out vec3 worldPos;
out vec2 UVs;
out vec4 position;
out vec3 normal;

void main() 
{
  normal =     mat3(uWORLD_INVERSE) * vertex_normal;
  UVs = uvs;
  worldPos = (uWORLD * vec4(vertex_position,1)).xyz;
  position = uMVP*vec4(vertex_position, 1.0);
  gl_Position = position;
  
}