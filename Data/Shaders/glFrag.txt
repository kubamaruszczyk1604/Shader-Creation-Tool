#version 330
in vec3 worldPos;
in vec2 UVs;
in vec4 position;
in vec3 normal;

uniform vec4 ambient;
uniform vec4 diffuse;
uniform vec4 specular;
uniform sampler2D Texture0;
uniform sampler2D Texture1;







out vec4 FragColour;

void Test(in vec4 a, in vec4 b, out vec4 sum)
{
      sum = a*b;
	  
} 
void Multiply42(vec4 Moja, vec4 Sucz, inout vec4 FinalColour)
{

   vec4 col1 = Moja;
   vec4 col2 = Sucz;
    FinalColour = col1*col2;
   
   
}

void main()
{

    vec4 result= vec4(0, 0, 0, 0);
	vec4 ambientL = vec4(0, 0, 0, 0);
	vec4 diffuseL =vec4(0, 0, 0, 0);
	vec4 specularL = vec4(0, 0, 0, 0);
	
	
	
    vec4 textureCol = texture2D(Texture0,UVs);
	vec4 textureCol2 = texture2D(Texture1,UVs);
	//result += textureCol*ambient;
	Multiply42(ambient,textureCol,result);
	//result += ambient * (textureCol);
   // result += diffuseL* diffuse * textureCol2;
	//result += specularL * specular;
	
	
    FragColour = result;// ambient*textureCol + diffuse*textureCol*0.5f;
}