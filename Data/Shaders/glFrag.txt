#version 330

//Passed from vertex shader
in vec3 oPosition_WorldSpace;
in vec3 oPosition_ObjectSpace;
in vec3 oPosition_EyeSpace;
in vec3 oNormal_InvWorldSpace;
in vec3 oNormal_ObjectScpace;
in vec2 oUVs;
in vec3 oCamera_WorldSpace;
in float oTime;


out vec4 FragColour;

//Uniform nodes translated as uniform variables.
uniform sampler2D       SCT_TEXTURE2D_0;


const float TAU = 6.28318530718;
const float MAX_ITER = 5.0;

float softInterval(float a, float b, float c, float d, float x)
{
    return smoothstep(a, b, x) - smoothstep(c, d, x);
}

  


//SCT dummy values for output split nodes
vec2 dummyOutVEC2;
vec3 dummyOutVEC3;
vec4 dummyOutVEC4;


// SCT Nodes Translated as functions.
void UVScroll(float Time, vec2 UVIn, float Speed, inout vec2 UVOut)
{
  UVOut = vec2(UVIn.x+Time*Speed, UVIn.y);
}

void Sampler2D(sampler2D Texture, vec2 Texcoord, inout vec4 FinalColour)
{
 FinalColour = texture2D(Texture,Texcoord); 
}



void main()
{

//SCT CALL: UVScroll
   vec2  OUT_UVOut0_NF_UVScroll_0_3259;
   UVScroll(oTime, oUVs, 1.0, OUT_UVOut0_NF_UVScroll_0_3259);

//SCT CALL: Sampler2D
   vec4  OUT_FinalColour0_NF_Sampler2D_1_3308;
   Sampler2D(SCT_TEXTURE2D_0, OUT_UVOut0_NF_UVScroll_0_3259, OUT_FinalColour0_NF_Sampler2D_1_3308);

FragColour = OUT_FinalColour0_NF_Sampler2D_1_3308;

}