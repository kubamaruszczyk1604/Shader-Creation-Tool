<?xml version="1.0" encoding="utf-8"?>
<Entities>
  <!--Shader Creation Tool - node config scripting file.-->
   <COMMON_CODE>
const FLOAT TAU = 6.28318530718;
const FLOAT MAX_ITER = 5;

float softInterval(float a, float b, float c, float d, float x)
{
    return smoothstep(a, b, x) - smoothstep(c, d, x);
}

float CausticX(float x, float power, float gtime)
{
    float p = mod(x * TAU, TAU) - 250.0;
    float time = gtime * .5 + 23.0;

    float i = p;;
    float c = 1.0;
    float inten = 0.005;
    for (int n = 0; n IS_SMALLER 3; n++)
    {
        float t = time * (1.0 - (3.5 / float(n + 1)));
        i = p + cos(t - i) + sin(t + i);
        c += 1.0 / length(p / (sin(i + t) / inten));
    }
    c /= float(MAX_ITER);
    c = 1.17 - pow(c, power);
    
    
    return c;
}

FLOAT UVFX1(VECTOR2 uv, FLOAT time)
{
    FLOAT light = 0.0;

    light += pow(CausticX((uv.x + 0.08 * uv.y) / 1.7 + 0.5, 1.8, time * 0.65), 10.0) * 0.05;
    light -= pow((1.0 - uv.y) * 0.3, 2.0) * 0.2;
    light += pow(CausticX(sin(uv.x), 0.3, time * 0.7), 9.0) * 0.4;
    light += pow(CausticX(cos(uv.x * 2.3), 0.3, time * 1.3), 4.0) * 0.1;
        
    light -= pow((1.0 - uv.y) * 0.3, 3.0);
    light = clamp(light, 0.0, 1.0);
    
    return light;
}

  </COMMON_CODE>
  
  
  <Node Name="AddV4">
  
    <Input_Variables>
      <Variable Name="VecA" Var_Type="Float4"> 
	  DEFAULT = (0,0,0,0) 
	  </Variable>
      <Variable Name="VecB" Var_Type="Float4">
	   DEFAULT = (0,0,0,0) 
      </Variable>
	   <Variable Name="VecC" Var_Type="Float4">
	   DEFAULT = (0,0,0,0) 
      </Variable>
    </Input_Variables>
	
    <Output_Variables>
      <Variable Name="FinalColour" Var_Type="Float4">
      </Variable>
    </Output_Variables>
	
	
   <Code> FinalColour = VecA+VecB+VecC; </Code>
  </Node>
 

 
  
    <Node Name="MultiplyV4">
  
    <Input_Variables>
      <Variable Name="VecA" Var_Type="Float4">
	  DEFAULT = (1,1,1,1)
	  </Variable>
      <Variable Name="VecB" Var_Type="Float4">
	   DEFAULT = (1,1,1,1)
      </Variable>
	  <Variable Name="VecC" Var_Type="Float4">
	   DEFAULT = (1,1,1,1)
      </Variable>
    </Input_Variables>
	
    <Output_Variables>
      <Variable Name="FinalColour" Var_Type="Float4">
      </Variable>
    </Output_Variables>
	
   <Code> FinalColour = VecA*VecB*VecC; </Code> 
  </Node>
  
  


  <Node Name="VisualizeNormal">
  
    <Input_Variables>
      <Variable Name="Norm" Var_Type="Float3">
	  </Variable>
    </Input_Variables>
	
    <Output_Variables>
      <Variable Name="FinalOut" Var_Type="Float4">
      </Variable>
    </Output_Variables>
	
   <Code> FinalOut = VECTOR4(Norm,1);</Code>
  </Node>
  
   <Node Name="DirSimpleLight">
  
    <Input_Variables>
      <Variable Name="normal" Var_Type="Float3">
	  </Variable>
	   <Variable Name="lightDir" Var_Type="Float3">
	  </Variable>
    </Input_Variables>
	
    <Output_Variables>
      <Variable Name="FinalOut" Var_Type="Float4">
      </Variable>
    </Output_Variables>
	
   <Code> 
   FLOAT NdotL = max( dot(normalize(normal),normalize(lightDir)), 0.0);
   FinalOut = VECTOR4(1,1,1,1)*NdotL;
   </Code>
  </Node>
  
  <Node Name="Blyynn_PhongSCT">
  
    <Input_Variables>
      <Variable Name="normal" Var_Type="Float3">
	  </Variable>
	   <Variable Name="cameraPos" Var_Type="Float3">
	  </Variable>
	  <Variable Name="objectPos" Var_Type="Float3">
	  </Variable>
	   <Variable Name="Ambient" Var_Type="Float4">
	  DEFAULT = (0,0,0,1)
	  </Variable>
	  <Variable Name="Diffuse" Var_Type="Float4">
	  DEFAULT = (0,0,0,1)
	  </Variable>
	   <Variable Name="Specular" Var_Type="Float4">
	  DEFAULT = (0,0,0,1)
	  </Variable>
	   <Variable Name="SpecPow" Var_Type="Float">
	   DEFAULT = 60
	  </Variable>
    </Input_Variables>
	
    <Output_Variables>
      <Variable Name="FinalOut" Var_Type="Float4">
      </Variable>
    </Output_Variables>
	
   <Code> 
   
   VECTOR3 lightDir = normalize(cameraPos-objectPos);
   VECTOR3 nViewDirection = normalize(objectPos-cameraPos);
   
   FLOAT NdotL = max( dot(normalize(normal),normalize(lightDir)), 0.0);
    
   VECTOR3 reflection = ((2.0 * normal) * NdotL) - lightDir;
   VECTOR3 nReflection = normalize(reflection);
   FLOAT beta = max(0.0, dot(-nReflection, nViewDirection));
   
   
   
   FinalOut = Ambient + Diffuse*NdotL + Specular * (pow(beta, SpecPow));
   </Code>
  </Node>
  
    <Node Name="Blyynn_Phong2">
  
    <Input_Variables>
	  <Variable Name="lightDir" Var_Type="Float3">
	  DEFAULT = (0,0,-1)
	  </Variable>
      <Variable Name="normal" Var_Type="Float3">
	  </Variable>
	   <Variable Name="cameraPos" Var_Type="Float3">
	  </Variable>
	  <Variable Name="objectPos" Var_Type="Float3">
	  </Variable>
	   <Variable Name="Ambient" Var_Type="Float4">
	  DEFAULT = (0,0,0,1)
	  </Variable>
	  <Variable Name="Diffuse" Var_Type="Float4">
	  DEFAULT = (0,0,0,1)
	  </Variable>
	   <Variable Name="Specular" Var_Type="Float4">
	  DEFAULT = (0,0,0,1)
	  </Variable>
	   <Variable Name="SpecPow" Var_Type="Float">
	   DEFAULT = 60
	  </Variable>
    </Input_Variables>
	
    <Output_Variables>
      <Variable Name="FinalOut" Var_Type="Float4">
      </Variable>
    </Output_Variables>
	
   <Code> 
   VECTOR3 nViewDirection = normalize(objectPos-cameraPos);
   FLOAT NdotL = max( dot(normalize(normal),normalize(lightDir)), 0.0);
   
   	
   VECTOR3 reflection = ((2.0 * normal) * NdotL) - lightDir;
   VECTOR3 nReflection = normalize(reflection);
   FLOAT beta = max(0.0, dot(-nReflection, nViewDirection));
   
   
   FinalOut = Ambient + Diffuse*NdotL + Specular * (pow(beta, SpecPow));
   </Code>
  </Node>
  
  
  
  <Node Name="ExpFog">
  
    <Input_Variables>
      <Variable Name="CamPos" Var_Type="Float3">
	  </Variable>
	  <Variable Name="ObjPos" Var_Type="Float3">
	  </Variable>
	   <Variable Name="ColourIn" Var_Type="Float4">
	  </Variable>
    </Input_Variables>
	
    <Output_Variables>
      <Variable Name="FinalOut" Var_Type="Float4">
      </Variable>
    </Output_Variables>
	
   <Code>   
     FLOAT distance = length(CamPos-ObjPos);
     FLOAT fogAmount = 1.0 - exp(-distance * 0.02);
     VECTOR4 fogColor =  VECTOR4(0.00, 0.001, 0.01, 1);
     FinalOut =mix(ColourIn, fogColor, fogAmount);
   </Code>
  </Node>
  

  
   <Node Name="SCTGodRays">
  
    <Input_Variables>
      <Variable Name="TextureUVs" Var_Type="Float2">
	  </Variable>
	  <Variable Name="Time" Var_Type="Float">
	  </Variable>
	   <Variable Name="RaysColour" Var_Type="Float4">
	  </Variable>
	  <Variable Name="Intensity" Var_Type="Float">
	  </Variable>
	   <Variable Name="ColourIn" Var_Type="Float4">
	  </Variable>
	  
    </Input_Variables>
	
    <Output_Variables>
      <Variable Name="FinalOut" Var_Type="Float4">
      </Variable>
    </Output_Variables>
	
   <Code>   
     FLOAT gr = UVFX1(TextureUVs,Time)*Intensity;
	 VECTOR4 grCol =  VECTOR4(gr, gr, gr, 1)*RaysColour;
     FinalOut = ColourIn + grCol;
   </Code>
  </Node>
  
  <Node Name="Vec_3TO4">
  
    <Input_Variables>
      <Variable Name="Vec3in" Var_Type="Float3">
	  </Variable>
    </Input_Variables>
	
    <Output_Variables>
      <Variable Name="FinalOut" Var_Type="Float4">
      </Variable>
    </Output_Variables>
	
   <Code>   FinalOut = VECTOR4(Vec3in,1); </Code>
  </Node>
  
  
  <Node Name="Vec_2TO4">
  
    <Input_Variables>
      <Variable Name="Vec2in" Var_Type="Float2">
	  </Variable>
    </Input_Variables>
	
    <Output_Variables>
      <Variable Name="FinalOut" Var_Type="Float4">
      </Variable>
    </Output_Variables>
	
   <Code> FinalOut = VECTOR4(Vec2in.x,Vec2in.y,1,1); </Code>
  </Node>
  
  
  
     <Node Name="FloatX4_TO_Vec4"> 
    <Input_Variables>
      <Variable Name="f1" Var_Type="Float">
	  </Variable>
	   <Variable Name="f2" Var_Type="Float">
	  </Variable>
	   <Variable Name="f3" Var_Type="Float">
	  </Variable>
	   <Variable Name="f4" Var_Type="Float">
	  </Variable>
    </Input_Variables>
	
    <Output_Variables>
      <Variable Name="FinalOut" Var_Type="Float4">
      </Variable>
    </Output_Variables>	
   <Code> FinalOut = VECTOR4(f1,f2,f3,f4); </Code>
  </Node>
  
     
  
  <Node Name="Sampler2D">
    <Input_Variables>
      <Variable Name="Texture" Var_Type="Texture2D">
	  </Variable>
      <Variable Name="Texcoord" Var_Type="Float2">
      </Variable>
    </Input_Variables>
	
    <Output_Variables>
      <Variable Name="FinalColour" Var_Type="Float4">
      </Variable>
    </Output_Variables>
	
   <Code> FinalColour = SampleTexture(Texture,Texcoord); </Code>
  </Node>
  
  <Node Name="UVScroll"> 
    <Input_Variables>
      <Variable Name="Time" Var_Type="Float">
	  </Variable>
      <Variable Name="UVIn" Var_Type="Float2">
	  </Variable>
	   <Variable Name="Speed" Var_Type="Float">
	   DEFAULT = 1
	  </Variable>
    </Input_Variables>
	
    <Output_Variables>
      <Variable Name="UVOut" Var_Type="Float2">
      </Variable>
    </Output_Variables>	
   <Code>  UVOut = VECTOR2(UVIn.x+Time*Speed, UVIn.y);</Code>
  </Node>
  
   <Node Name="SPLIT_V2"> 
    <Input_Variables>
      <Variable Name="In" Var_Type="Float2">
	  </Variable>
    </Input_Variables>
	
    <Output_Variables>
      <Variable Name="Out1" Var_Type="Float2">
      </Variable>
	   <Variable Name="Out2" Var_Type="Float2">
      </Variable>
    </Output_Variables>	
   <Code>   
    Out1 = In;
    Out2 = In;
   </Code>
  </Node>
  
  <Node Name="BW_FILTER"> 
    <Input_Variables>
      <Variable Name="ColourIn" Var_Type="Float4">
	  </Variable>
    </Input_Variables>
	
    <Output_Variables>
      <Variable Name="ColourBW" Var_Type="Float4">
      </Variable>
    </Output_Variables>	
   <Code>
   float avg = (ColourIn.x + ColourIn.y + ColourIn.z)/3.0;
   ColourBW = VECTOR4(avg,avg,avg,ColourIn.a);
   </Code>
  </Node>
  
   <Node Name="PASS_FILTER"> 
    <Input_Variables>
      <Variable Name="ColourIn" Var_Type="Float4">
	  </Variable>
	  <Variable Name="ColourPass" Var_Type="Float4">
	  </Variable>
    </Input_Variables>
	
    <Output_Variables>
      <Variable Name="ColourOUT" Var_Type="Float4">
      </Variable>
    </Output_Variables>	
   <Code>
   float avg = ((ColourIn.x + ColourIn.y + ColourIn.z)/3.0) ;
   ColourOUT = VECTOR4(avg,avg,avg,ColourIn.a)* ColourPass;
   </Code>
  </Node>
  
</Entities>